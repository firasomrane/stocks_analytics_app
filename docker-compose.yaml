version: '3.5'

services:
  db:
    container_name: db
    image: postgres:14.1-alpine
    environment: &db_env
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - db-volume:/var/lib/postgresql/data

  # NOTE: Test DB doesn't require a persistent volume, since the data isn't supposed and should'nt be persisted
  test-db:
    container_name: test-db
    image: postgres:14.1-alpine
    environment:
      <<: *db_env

    ports:
      - "15432:5432"

  db2:
    container_name: db
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    ports:
      - "5432:5432"

  pipeline: &pipeline
    container_name: pipeline
    build: ./pipeline
    # command: tail -F anything
    depends_on:
      - db
    environment: &db_environment
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_NAME: ${POSTGRES_DB_NAME:-postgres}

  api: &api
    container_name: api
    build: ./api
    # command: tail -F anything
    depends_on:
      - db
    ports:
      - "8000:8000"
    environment:
      <<: *db_environment

  api-tests-base: &api-tests-base
    <<: *api
    build: ./api
    environment: &db_test_environment
      POSTGRES_HOST: ${POSTGRES_HOST:-test-db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_NAME: ${POSTGRES_DB_NAME:-postgres}
    depends_on:
      - test-db
    links:
      - test-db:test-db
    container_name: api_tests
    command: pytest -v

  api-tests-ci:
    build: ./api
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      - db2
    links:
      - db2:db
    command: pytest -v

  api-tests-local:
    <<: *api-tests-base
    volumes:
      - ./api:/usr/src/app/

volumes:
  db-volume:
    external: true
